name: 🔍 Terraform Plan

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**.tf'
      - '**.tfvars'
      - '.github/workflows/terraform-*.yml'

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  terraform-plan:
    name: 📋 Terraform Plan
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      
    strategy:
      matrix:
        environment: [dev, staging]
        
    steps:
      - name: ✅ Checkout código
        uses: actions/checkout@v4
        
      - name: 🔧 Configurar AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: 🏗️ Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          
      - name: 🎨 Terraform Format Check
        working-directory: ./environments/${{ matrix.environment }}
        run: terraform fmt -check -recursive
        
      - name: ⚡ Terraform Init
        working-directory: ./environments/${{ matrix.environment }}
        run: |
          terraform init --upgrade \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=${{ matrix.environment }}/${{ secrets.TF_STATE_KEY }}" \
            -backend-config="region=${{ env.AWS_REGION }}"
            
      - name: ✅ Terraform Validate
        working-directory: ./environments/${{ matrix.environment }}
        run: terraform validate
        
      - name: 📊 Terraform Plan
        working-directory: ./environments/${{ matrix.environment }}
        id: plan
        run: |
          terraform plan -no-color -input=false -out=tfplan
          terraform show -no-color tfplan > plan.txt
          
      - name: 📝 Comment PR con Plan
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('./environments/${{ matrix.environment }}/plan.txt', 'utf8');
            const output = `## 🏗️ Terraform Plan - ${{ matrix.environment }}
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform
            ${plan}
            \`\`\`
            
            </details>
            
            *Environment: ${{ matrix.environment }}*
            *Pusher: @${{ github.actor }}*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });